#!/usr/bin/env bash
### mkradmin-propose -- propose new multisig action
### Usage: mkradmin propose <target> <sig> [<args>]
###    or: mkradmin propose <target> [<data>]
###
### Submit a proposal for the multisig to call <target> with <data>.
### If <sig> has the form `<name>(<types>)', infer <data> from <args>.
###
### Anyone can propose an action, so <origin> can be any address.
###
### Examples:
###
###    # Propose paying out 500 MKR to a certain address:
###    $ mkradmin propose @mkr_token "transfer(address,uint256)" \
###        0x9a525242f3e563a1921dfd170c6ff7e48111fdde \
###        500''000000''000000''000000
###
###    # Propose transferring ownership of the root authority:
###    $ mkradmin propose @maker_root_auth \
###        "updateAuthority(address,uint8)" \
###        @maker_new_multisig 0x00
###
###    # Propose claiming a feedbase identifier from the multisig:
###    $ mkradmin propose @feedbase "claim()"
###
### See also mkradmin-confirm(1), mkradmin-trigger(1), mkradmin-ls(1).

set -e

[[ $1 ]] || { mkradmin propose --help; exit 1; }

target=$(seth --to-address "${1?missing target address}")
data=$(seth calldata ${2+"${@:2}"})

mkradmin --ensure-account "${0##*/}"

if ! [[ $MKRADMIN_SILENT ]]; then
  echo >&2 "Proposing multisig action..."
  echo >&2 "  receiver   $target"
  echo >&2 "  calldata   $data"
fi

sig="propose(address,bytes,uint256)(uint)"
n=$(seth send @maker_multisig "$sig" "${target#0x}" "${data#0x}" 0)
n=$(seth --to-dec "$n")
if [[ $n = 0 ]]; then
  echo >&2 "${0##*/}: error: failed to create proposal"
  exit 1
else
  echo "Successfully proposed action $n."
fi
